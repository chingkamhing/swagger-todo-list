// Code generated by go-swagger; DO NOT EDIT.

package todos

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"example.com/todo-list/models"
)

// DeleteOneReader is a Reader for the DeleteOne structure.
type DeleteOneReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteOneReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteOneNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewDeleteOneDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteOneNoContent creates a DeleteOneNoContent with default headers values
func NewDeleteOneNoContent() *DeleteOneNoContent {
	return &DeleteOneNoContent{}
}

/*DeleteOneNoContent handles this case with default header values.

Deleted
*/
type DeleteOneNoContent struct {
}

func (o *DeleteOneNoContent) Error() string {
	return fmt.Sprintf("[DELETE /todo/{id}][%d] deleteOneNoContent ", 204)
}

func (o *DeleteOneNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteOneDefault creates a DeleteOneDefault with default headers values
func NewDeleteOneDefault(code int) *DeleteOneDefault {
	return &DeleteOneDefault{
		_statusCode: code,
	}
}

/*DeleteOneDefault handles this case with default header values.

error
*/
type DeleteOneDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the delete one default response
func (o *DeleteOneDefault) Code() int {
	return o._statusCode
}

func (o *DeleteOneDefault) Error() string {
	return fmt.Sprintf("[DELETE /todo/{id}][%d] deleteOne default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteOneDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *DeleteOneDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
